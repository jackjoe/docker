user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  4096;  ## Default: 1024
  use epoll;
  multi_accept on;
}


http {
  include  mime.types;

  index    index.html index.htm index.php;

  types_hash_max_size 2048;

  default_type application/octet-stream;

  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

  # GoAccess format:
  # goaccess -f access.log --log-format='%h - %^ [%d:%t %^]  %s "%r" %b "%R" "%u" "%^"' --date-format=%d/%b/%Y --time-format=%T
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log   /var/log/nginx/access.log  main;

  # Sets the maximum number and size of buffers used for reading large client request header.
  # A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large)
  # error is returned to the client. A request header field cannot exceed the size of
  # one buffer as well, or the 400 (Bad Request) error is returned to the client.
  large_client_header_buffers 4 16k;

  # Hide nginx version information.
  server_tokens off;

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  keepalive_timeout 60s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  # For performance reasons, on FreeBSD systems w/ ZFS
  # this option should be disabled as ZFS's ARC caches
  # frequently used files in RAM by default.
  sendfile        on;

  # Don't send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out.
  tcp_nopush      on;
  tcp_nodelay     on;

  # Enable gzip compression.
  gzip            on;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and CPU usage, offering about
  # 75% reduction for most ASCII files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;
  # text/html is always compressed by gzip module

  gzip_proxied no-store no-cache private expired auth;

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It is best if you enable this in a location{} block for
  # a specific directory, or on an individual server{} level.
  # gzip_static on;

  client_body_timeout         12s;
  client_header_timeout       12s;
  client_max_body_size        32m;

  send_timeout                30s;

  proxy_connect_timeout       600s;
  proxy_send_timeout          600s;
  proxy_read_timeout          1800s;

  proxy_buffer_size          128k;
  proxy_buffers              4 256k;
  proxy_busy_buffers_size    256k;

  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  include /etc/nginx/conf.d/*.conf;
}
